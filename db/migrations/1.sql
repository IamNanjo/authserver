-- Migration
CREATE TABLE IF NOT EXISTS Migration (id INTEGER PRIMARY KEY);
INSERT INTO Migration (id) VALUES (1);

-- App
CREATE TABLE IF NOT EXISTS App (
	id TEXT PRIMARY KEY NOT NULL,
	name TEXT NOT NULL,
	description TEXT DEFAULT ''
);

-- Domain
CREATE TABLE IF NOT EXISTS Domain (
	name TEXT PRIMARY KEY NOT NULL,
	app TEXT NOT NULL,
	FOREIGN KEY (app) REFERENCES App(id) ON UPDATE CASCADE ON DELETE CASCADE
);

-- User
CREATE TABLE IF NOT EXISTS User (
	id TEXT PRIMARY KEY NOT NULL,
	name TEXT NOT NULL UNIQUE COLLATE NOCASE,
	email TEXT DEFAULT '' COLLATE NOCASE,
	password TEXT DEFAULT '',
	role INTEGER NOT NULL DEFAULT 1,
	FOREIGN KEY (role) REFERENCES Role(id) ON UPDATE CASCADE ON DELETE CASCADE
);

-- User role
CREATE TABLE IF NOT EXISTS Role (
	id INTEGER PRIMARY KEY, -- rowid
	name TEXT NOT NULL
);
INSERT INTO Role (id, name) VALUES 
	(1, 'User'),
	(2, 'Administrator');

CREATE UNIQUE INDEX IF NOT EXISTS idx_user_name ON User (name COLLATE NOCASE);
CREATE UNIQUE INDEX IF NOT EXISTS idx_user_email ON User (email COLLATE NOCASE) WHERE email != "";

-- AppManager
CREATE TABLE IF NOT EXISTS AppManager (
	app TEXT NOT NULL,
	user TEXT NOT NULL,
	PRIMARY KEY (app, user),
	FOREIGN KEY (app) REFERENCES App(id) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (user) REFERENCES User(id) ON UPDATE CASCADE ON DELETE CASCADE
);

-- Sessions
CREATE TABLE IF NOT EXISTS Session (
    id TEXT PRIMARY KEY NOT NULL,
    user TEXT NOT NULL,
    device TEXT DEFAULT 'Unknown device',
    last_used INTEGER NOT NULL,
    expires_at INTEGER NOT NULL,
    token TEXT NOT NULL UNIQUE,
    FOREIGN KEY(user) REFERENCES User(id)
);

CREATE TABLE IF NOT EXISTS OAuthToken (
    id INTEGER PRIMARY KEY,
    user TEXT NOT NULL,
    token TEXT NOT NULL,
    provider TEXT NOT NULL,
	created_at TIMESTAMP NOT NULL,
    expires_at TIMESTAMP NOT NULL,
	UNIQUE (user, token),
    FOREIGN KEY(user) REFERENCES User(id)
);
