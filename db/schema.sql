CREATE TABLE IF NOT EXISTS Migration (id INTEGER PRIMARY KEY);
INSERT INTO Migration (id) VALUES (1);

CREATE TABLE IF NOT EXISTS App (
	id TEXT PRIMARY KEY NOT NULL,
	name TEXT NOT NULL,
	description TEXT DEFAULT ''
);

CREATE TABLE IF NOT EXISTS Domain (
	name TEXT NOT NULL,
	app TEXT NOT NULL REFERENCES App(id) ON UPDATE CASCADE ON DELETE CASCADE,
	PRIMARY KEY (name, app)
);

CREATE TABLE IF NOT EXISTS User (
	id TEXT PRIMARY KEY,
	name TEXT NOT NULL COLLATE NOCASE,
	email TEXT DEFAULT '' COLLATE NOCASE,
	password TEXT DEFAULT '',
	role INTEGER NOT NULL DEFAULT 1 REFERENCES Role(id) ON UPDATE CASCADE
);
CREATE UNIQUE INDEX IF NOT EXISTS idx_user_name ON User (name COLLATE NOCASE);
CREATE UNIQUE INDEX IF NOT EXISTS idx_user_email ON User (email COLLATE NOCASE) WHERE email != "";

CREATE TABLE IF NOT EXISTS Role (
	id INTEGER PRIMARY KEY,
	name TEXT NOT NULL
);
INSERT INTO Role (id, name) VALUES 
	(1, 'User'),
	(2, 'Manager');

CREATE TABLE IF NOT EXISTS AppUser (
	app TEXT REFERENCES App(id) ON UPDATE CASCADE ON DELETE CASCADE,
	user TEXT REFERENCES User(id) ON UPDATE CASCADE ON DELETE CASCADE,
	role INTEGER NOT NULL DEFAULT 1 REFERENCES Role(id) ON UPDATE CASCADE,
	PRIMARY KEY (app, user)
);

CREATE TABLE IF NOT EXISTS Session (
	id TEXT PRIMARY KEY NOT NULL,
	user TEXT NOT NULL REFERENCES User(id) ON UPDATE CASCADE ON DELETE CASCADE,
	device TEXT DEFAULT 'Unknown device',
	last_used INTEGER NOT NULL,
	expires_at INTEGER NOT NULL,
	token TEXT NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS OAuthToken (
	id INTEGER PRIMARY KEY,
	user TEXT NOT NULL REFERENCES User(id) ON UPDATE CASCADE ON DELETE CASCADE,
	token TEXT NOT NULL,
	provider TEXT NOT NULL,
	created_at TIMESTAMP NOT NULL,
	expires_at TIMESTAMP NOT NULL,
	UNIQUE (user, token)
);
